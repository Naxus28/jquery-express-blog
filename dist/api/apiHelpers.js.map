{"version":3,"sources":["../../server/api/apiHelpers.js"],"names":["validateApiRequest","items","missingItems","Object","entries","key","value","push","length","ApiException"],"mappings":";;;;;;;;;AAAA;;AACA;;;;;AAKA,IAAMA,qBAAqB,SAArBA,kBAAqB,CAACC,KAAD,EAAW;AACpC,MAAIC,eAAe,EAAnB;;AADoC;AAAA;AAAA;;AAAA;AAGpC,yBAAyBC,OAAOC,OAAP,CAAeH,KAAf,CAAzB,8HAAgD;AAAA;;AAAA;;AAAA,UAAtCI,GAAsC;AAAA,UAAjCC,KAAiC;;AAC9C,UAAI,CAACA,KAAL,EAAY;AACVJ,qBAAaK,IAAb,CAAkBF,GAAlB;AACD;AACF;AAPmC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AASpC,MAAIH,aAAaM,MAAjB,EAAyB;AACvB,UAAM,IAAIC,8BAAJ,kCAA+CP,YAA/C,SAAgE,GAAhE,CAAN;AACD;AACF,CAZD;;QAeEF,kB,GAAAA,kB","file":"apiHelpers.js","sourcesContent":["import { ApiException } from '../errorHandlers/exceptionClasses';\n/**\n * checks if api request is missing mandatory params\n * @param  {Object} items the post object\n * @return missingItems | throws exception\n */\nconst validateApiRequest = (items) => {\n  let missingItems = [];\n\n  for (let [key, value] of Object.entries(items)) {\n    if (!value) {\n      missingItems.push(key);\n    }\n  }\n\n  if (missingItems.length) {\n    throw new ApiException(`Missing required item(s): '${missingItems}'`, 400);\n  }\n};\n\nexport {\n  validateApiRequest\n};"]}